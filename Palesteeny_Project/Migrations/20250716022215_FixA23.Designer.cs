// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Palesteeny_Project.Models;

#nullable disable

namespace Palesteeny_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250716022215_FixA23")]
    partial class FixA23
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Palesteeny_Project.Models.AIAssistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AIAssistantId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AIAssistantId");

                    b.ToTable("AIAssistant");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("NumberOfLessons")
                        .HasColumnType("int");

                    b.Property<string>("PdfUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ChatLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("PageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserPalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserPalId");

                    b.ToTable("ChatLogs");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Climate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Food")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageClimate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageNameMeaning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameMeaning")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Drawing", b =>
                {
                    b.Property<int>("DrawingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrawingId"));

                    b.Property<string>("BrushType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int>("UserPalId")
                        .HasColumnType("int");

                    b.HasKey("DrawingId");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UserPalId");

                    b.ToTable("Drawings");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ExerciseMatch", b =>
                {
                    b.Property<int>("ExerciseMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseMatchId"));

                    b.Property<int>("ExerciseQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("MatchImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseMatchId");

                    b.HasIndex("ExerciseQuestionId");

                    b.ToTable("ExerciseMatch");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ExerciseOption", b =>
                {
                    b.Property<int>("ExerciseOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseOptionId"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("OptionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseOptionId");

                    b.HasIndex("ExerciseQuestionId");

                    b.ToTable("ExerciseOptions");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ExerciseQuestion", b =>
                {
                    b.Property<int>("ExerciseQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseQuestionId"));

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionGroupId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseQuestionId");

                    b.HasIndex("QuestionGroupId");

                    b.ToTable("ExerciseQuestions");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.FavoriteStory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QusId")
                        .HasColumnType("int");

                    b.Property<int>("UserPalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QusId");

                    b.HasIndex("UserPalId");

                    b.ToTable("FavoriteStories");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GamePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.HelpQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HelpQuestions");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("LessonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartPage")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LessonId");

                    b.HasIndex("BookId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuestionGroup", b =>
                {
                    b.Property<int>("QuestionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionGroupId"));

                    b.Property<int?>("LessonId")
                        .HasColumnType("int");

                    b.Property<bool?>("QuestionOverlay")
                        .HasColumnType("bit");

                    b.Property<string>("SharedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionGroupId");

                    b.HasIndex("LessonId");

                    b.ToTable("QuestionGroups");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuizOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizQuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizQuestionId");

                    b.ToTable("QuizOptions");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuizQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuizQuestions");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuizResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.Property<int>("UserPalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserPalId");

                    b.ToTable("QuizResults");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Qusi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Qusis");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QusiImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("QusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QusId");

                    b.ToTable("QusiImages");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.SearchableContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SearchableContents");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<string>("GradeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SemesterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.StoryBookmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LastImageIndex")
                        .HasColumnType("int");

                    b.Property<int>("QusId")
                        .HasColumnType("int");

                    b.Property<int>("UserPalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QusId");

                    b.HasIndex("UserPalId");

                    b.ToTable("StoryBookmarks");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Palesteeny_Project.Models.UserExerciseAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseOptionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("UserAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseOptionId");

                    b.ToTable("UserExerciseAnswers");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.UserLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookmarkPage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserPalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserPalId");

                    b.ToTable("UserLessons");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Admin", b =>
                {
                    b.HasBaseType("Palesteeny_Project.Models.User");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("Palesteeny_Project.Models.UserPal", b =>
                {
                    b.HasBaseType("Palesteeny_Project.Models.User");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreferredAssistantId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasIndex("PreferredAssistantId");

                    b.HasIndex("SemesterId");

                    b.ToTable("UsersPal", (string)null);
                });

            modelBuilder.Entity("Palesteeny_Project.Models.AIAssistant", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.AIAssistant", null)
                        .WithMany("AIAssistants")
                        .HasForeignKey("AIAssistantId");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Book", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Semester", "Semester")
                        .WithMany("Books")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ChatLog", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.UserPal", "User")
                        .WithMany()
                        .HasForeignKey("UserPalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Drawing", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Template", "Template")
                        .WithMany("Drawings")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Palesteeny_Project.Models.UserPal", "User")
                        .WithMany("Drawings")
                        .HasForeignKey("UserPalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ExerciseMatch", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.ExerciseQuestion", "ExerciseQuestion")
                        .WithMany("Matches")
                        .HasForeignKey("ExerciseQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseQuestion");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ExerciseOption", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.ExerciseQuestion", "ExerciseQuestion")
                        .WithMany("Options")
                        .HasForeignKey("ExerciseQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseQuestion");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ExerciseQuestion", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.QuestionGroup", "QuestionGroup")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionGroupId");

                    b.Navigation("QuestionGroup");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.FavoriteStory", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Qusi", "Qusi")
                        .WithMany()
                        .HasForeignKey("QusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Palesteeny_Project.Models.UserPal", "User")
                        .WithMany("FavoriteStories")
                        .HasForeignKey("UserPalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Qusi");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Lesson", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Book", "Book")
                        .WithMany("Lessons")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuestionGroup", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Lesson", "Lesson")
                        .WithMany("QuestionGroups")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuizOption", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.QuizQuestion", "QuizQuestion")
                        .WithMany("Options")
                        .HasForeignKey("QuizQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizQuestion");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuizResult", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.UserPal", "User")
                        .WithMany("QuizResults")
                        .HasForeignKey("UserPalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QusiImage", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Qusi", "Qusi")
                        .WithMany("Images")
                        .HasForeignKey("QusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Qusi");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.StoryBookmark", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Qusi", "Qusi")
                        .WithMany()
                        .HasForeignKey("QusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Palesteeny_Project.Models.UserPal", "User")
                        .WithMany("StoryBookmarks")
                        .HasForeignKey("UserPalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Qusi");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.UserExerciseAnswer", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.ExerciseOption", "ExerciseOption")
                        .WithMany()
                        .HasForeignKey("ExerciseOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseOption");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.UserLesson", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.Lesson", "Lesson")
                        .WithMany("UserLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Palesteeny_Project.Models.UserPal", "UserPal")
                        .WithMany("UserLessons")
                        .HasForeignKey("UserPalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("UserPal");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Admin", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Palesteeny_Project.Models.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Palesteeny_Project.Models.UserPal", b =>
                {
                    b.HasOne("Palesteeny_Project.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Palesteeny_Project.Models.UserPal", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Palesteeny_Project.Models.AIAssistant", "PreferredAssistant")
                        .WithMany()
                        .HasForeignKey("PreferredAssistantId");

                    b.HasOne("Palesteeny_Project.Models.Semester", "Semester")
                        .WithMany("UsersPal")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PreferredAssistant");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.AIAssistant", b =>
                {
                    b.Navigation("AIAssistants");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Book", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.ExerciseQuestion", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Lesson", b =>
                {
                    b.Navigation("QuestionGroups");

                    b.Navigation("UserLessons");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuestionGroup", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.QuizQuestion", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Qusi", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Semester", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("UsersPal");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.Template", b =>
                {
                    b.Navigation("Drawings");
                });

            modelBuilder.Entity("Palesteeny_Project.Models.UserPal", b =>
                {
                    b.Navigation("Drawings");

                    b.Navigation("FavoriteStories");

                    b.Navigation("QuizResults");

                    b.Navigation("StoryBookmarks");

                    b.Navigation("UserLessons");
                });
#pragma warning restore 612, 618
        }
    }
}
